# -*- coding: utf-8 -*-
"""gyetoJeong.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/11gQxZVpWkYBaKKjpHfQdPl5g866hKhx6
"""

''' 파일 업로드 필요시
from google.colab import files
files.upload()
'''

import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
import numpy as np
import math

#각종 함수 모음
def gye_to_number(westgyename): #계이름->숫자
    switcher = {
        "도": "15", "레": "17", "미": "19","파": "21", "솔": "23", "라": "25", "시": "27",
        "": "ff",
        " ": "dd"
    }
    return switcher.get(westgyename, "nothing")
def semi_to_number(semitone): #반음->숫자
    switcher = {
        "0": "0", "1": "1", "-1": "-1","": "0"," ": "dd", "#":1, "b":-1
    }
    return switcher.get(semitone, "noting")
def oct_to_number(octave): #옥타브->숫자
    switcher = {
        "0": "-14", "1": "0", "2": "14","": "0"," ": "dd"
    }
    return switcher.get(octave, "noting")
def sumnumber_to_number(sumnumber): #전체합 ->숫자
    switcher = {
        -2: "㣩", -1: "侇", 1: "㑲", 2: "㒇",3: "㒣", 4: "黃", 5:"大", 7: "太", 8: "夾", 9: "故", 10: "仲", 11:"蕤",
        12: "林", 13: "夷", 14: "南↓", 15: "南", 16: "無", 17: "應", 18: "潢", 19: "汏", 20: "汰↓", 21: "汰", 22: "浹", 23: "㴌", 24: "㳞↓", 25: "㳞",
        26: "淋↓", 27: "淋", 28: "洟", 29: "湳", 30: "潕", 31: "㶐", 32: "㶂", 33: "𣴘", 35: "㳲", "\n": " ", " ": " "
    }
    return switcher.get(sumnumber, "noting")

def whatscale ():
  scaletext="#(샵) 혹은 b(플렛) 개수를 입력하세요(샵은 +로, 플렛은 -로, 아무것도 없으면 공백 또는 0을 입력해주세요) "
  global scalenumber1
  scalenumber1=int(input(scaletext))
  switcher = {
      0:0, 1:8, 2:2, 3:10, 4:2, 5:-1, 6:6, 7:0, -1:6, -2:-2, -3:4, -4:10, -5:2, -6:8, -7:0
  }
  return switcher.get(scalenumber1, "noting")

syap=["파", "도", "솔", "레", "라", "미", "시"]
peullaes=reversed(syap)
gyenumbers=[]
nartual=[]
semilist=[]
semitone=[]
semitones=[]
octaves=[]
hanja=[]

filename=str(input("파일명 입력: "))
gyeData = pd.read_excel(filename+'.xlsx')

scalenumber = whatscale()

#계이름->숫자
gyenames = gyeData['gyenames']
for i in range(len(gyenames)):
    gyenumbers.append("%d" %int(gye_to_number(gyenames[i])))
gyeData['gyenumbers']=gyenumbers

#
if scalenumber1>0:
    semilist=syap[:scalenumber1]
elif scalenumber1<0:
    syap.reverse()
    semilist=syap[:abs(scalenumber1)]
else:
    semilist=[]
nartual = gyeData['nartual']
for i in range(len(gyenames)):
    if gyenames[i] in semilist and scalenumber1>0:
      semitone.append(1)
    elif gyenames[i] in semilist and scalenumber1<0:
      semitone.append(-1)
    else:
      semitone.append(0)
gyeData['semetone']=semitone

#반음->숫자

for i in range(len(semitone)):
    semitones.append("%d" %int(semi_to_number(str(semitone[i]))))
gyeData['seminumbers']=semitones

#옥타브->숫자
octave = gyeData['octave']
for i in range(len(octave)):
    octaves.append("%d" %int(oct_to_number(str(octave[i]))))
gyeData['octaves']=octaves

#계이름계숫자 + 반음숫자 + 옥타브숫자 
gyearray = np.array(gyenumbers)
gyearray_num = gyearray.astype(np.int_)
semiarray = np.array(semitones)
semiarray_num = semiarray.astype(np.int_)
octarray = np.array(octaves)
octarray_num = octarray.astype(np.int_)
sumarray = gyearray_num + semiarray_num + octarray_num
sumarray = sumarray-14-2
gyeData['sumnumbers']=sumarray
realnumberarray = sumarray + scalenumber
gyeData['realnumber'] = realnumberarray

#총 숫자 -> 한자
hanjalist=list(map(sumnumber_to_number, realnumberarray))
gyeData['hanja']=hanjalist
print(hanjalist)
gyeData.to_excel(filename+'_hanja.xlsx')
gyeData

peullaes[:abs(scalenumber1)]

peullaes = reversed(syap)
print(*peullaes)

#각종 함수 모음
def gye_to_number(westgyename): #계이름->숫자
    switcher = {
        "도": "15", "레": "17", "미": "19","파": "21", "솔": "23", "라": "25", "시": "27",
        "": "ff",
        " ": "dd"
    }
    return switcher.get(westgyename, "nothing")
def semi_to_number(semitone): #반음->숫자
    switcher = {
        "0": "0", "1": "1", "2": "-1","": "0"," ": "dd", "#":1, "b":-1
    }
    return switcher.get(semitone, "noting")
def oct_to_number(octave): #옥타브->숫자
    switcher = {
        "0": "-14", "1": "0", "2": "14","": "0"," ": "dd"
    }
    return switcher.get(octave, "noting")
def sumnumber_to_number(sumnumber): #전체합 ->숫자
    switcher = {
        -2: "㣩", -1: "侇", 1: "㑲", 2: "㒇",3: "㒣", 4: "黃", 5:"大", 7: "太", 8: "夾", 9: "故", 10: "仲", 11:"蕤",
        12: "林", 13: "夷", 15: "南", 16: "無", 17: "應", 18: "潢", 19: "汏", 21: "汰", 22: "浹", 23: "㴌", 25: "㳞",
        27: "淋", 28: "洟", 29: "湳", 30: "潕", 31: "㶐", 32: "㶂", 33: "𣴘", 35: "㳲", "\n": " ", " ": " "
    }
    return switcher.get(sumnumber, "noting")

def whatscale ():
  scaletext="#(샵) 혹은 b(플렛) 개수를 입력하세요(샵은 +로, 플렛은 -로, 아무것도 없으면 공백 또는 0을 입력해주세요) "
  scalenumber=int(input(scaletext))
  switcher = {
      0:0, 1:8, 2:2, 3:10, 4:2, 5:-1, 6:6, 7:0, -1:6, -2:-2, -3:4, -4:10, -5:2, -6:8, -7:0
  }
  return switcher.get(scalenumber, "noting")
